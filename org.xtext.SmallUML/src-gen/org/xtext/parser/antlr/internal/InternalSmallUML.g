/*
 * generated by Xtext 2.10.1
 */
grammar InternalSmallUML;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.SmallUMLGrammarAccess;

}

@parser::members {

 	private SmallUMLGrammarAccess grammarAccess;

    public InternalSmallUMLParser(TokenStream input, SmallUMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SchemaUML";
   	}

   	@Override
   	protected SmallUMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSchemaUML
entryRuleSchemaUML returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchemaUMLRule()); }
	iv_ruleSchemaUML=ruleSchemaUML
	{ $current=$iv_ruleSchemaUML.current; }
	EOF;

// Rule SchemaUML
ruleSchemaUML returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SchemaUML'
		{
			newLeafNode(otherlv_0, grammarAccess.getSchemaUMLAccess().getSchemaUMLKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSchemaUMLAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='gene'
			{
				newLeafNode(otherlv_2, grammarAccess.getSchemaUMLAccess().getGeneKeyword_2_0());
			}
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getSchemaUMLAccess().getLeftCurlyBracketKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSchemaUMLAccess().getGeneGeneralisationParserRuleCall_2_2_0());
					}
					lv_gene_4_0=ruleGeneralisation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSchemaUMLRule());
						}
						add(
							$current,
							"gene",
							lv_gene_4_0,
							"org.xtext.SmallUML.Generalisation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getSchemaUMLAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSchemaUMLAccess().getGeneGeneralisationParserRuleCall_2_3_1_0());
						}
						lv_gene_6_0=ruleGeneralisation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSchemaUMLRule());
							}
							add(
								$current,
								"gene",
								lv_gene_6_0,
								"org.xtext.SmallUML.Generalisation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getSchemaUMLAccess().getRightCurlyBracketKeyword_2_4());
			}
		)?
		otherlv_8='c'
		{
			newLeafNode(otherlv_8, grammarAccess.getSchemaUMLAccess().getCKeyword_3());
		}
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getSchemaUMLAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSchemaUMLAccess().getCSmallClassParserRuleCall_5_0());
				}
				lv_c_10_0=ruleSmallClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchemaUMLRule());
					}
					add(
						$current,
						"c",
						lv_c_10_0,
						"org.xtext.SmallUML.SmallClass");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11=','
			{
				newLeafNode(otherlv_11, grammarAccess.getSchemaUMLAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSchemaUMLAccess().getCSmallClassParserRuleCall_6_1_0());
					}
					lv_c_12_0=ruleSmallClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSchemaUMLRule());
						}
						add(
							$current,
							"c",
							lv_c_12_0,
							"org.xtext.SmallUML.SmallClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getSchemaUMLAccess().getRightCurlyBracketKeyword_7());
		}
		(
			otherlv_14='ass'
			{
				newLeafNode(otherlv_14, grammarAccess.getSchemaUMLAccess().getAssKeyword_8_0());
			}
			otherlv_15='{'
			{
				newLeafNode(otherlv_15, grammarAccess.getSchemaUMLAccess().getLeftCurlyBracketKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSchemaUMLAccess().getAssAssociationParserRuleCall_8_2_0());
					}
					lv_ass_16_0=ruleAssociation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSchemaUMLRule());
						}
						add(
							$current,
							"ass",
							lv_ass_16_0,
							"org.xtext.SmallUML.Association");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_17=','
				{
					newLeafNode(otherlv_17, grammarAccess.getSchemaUMLAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSchemaUMLAccess().getAssAssociationParserRuleCall_8_3_1_0());
						}
						lv_ass_18_0=ruleAssociation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSchemaUMLRule());
							}
							add(
								$current,
								"ass",
								lv_ass_18_0,
								"org.xtext.SmallUML.Association");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_19='}'
			{
				newLeafNode(otherlv_19, grammarAccess.getSchemaUMLAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
		otherlv_20='}'
		{
			newLeafNode(otherlv_20, grammarAccess.getSchemaUMLAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleGeneralisation
entryRuleGeneralisation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralisationRule()); }
	iv_ruleGeneralisation=ruleGeneralisation
	{ $current=$iv_ruleGeneralisation.current; }
	EOF;

// Rule Generalisation
ruleGeneralisation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Generalisation'
		{
			newLeafNode(otherlv_0, grammarAccess.getGeneralisationAccess().getGeneralisationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGeneralisationAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='source'
		{
			newLeafNode(otherlv_2, grammarAccess.getGeneralisationAccess().getSourceKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneralisationAccess().getSourceSmallClassParserRuleCall_3_0());
				}
				lv_source_3_0=ruleSmallClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneralisationRule());
					}
					set(
						$current,
						"source",
						lv_source_3_0,
						"org.xtext.SmallUML.SmallClass");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='cible'
		{
			newLeafNode(otherlv_4, grammarAccess.getGeneralisationAccess().getCibleKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneralisationAccess().getCibleSmallClassParserRuleCall_5_0());
				}
				lv_cible_5_0=ruleSmallClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneralisationRule());
					}
					set(
						$current,
						"cible",
						lv_cible_5_0,
						"org.xtext.SmallUML.SmallClass");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getGeneralisationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleSmallClass
entryRuleSmallClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSmallClassRule()); }
	iv_ruleSmallClass=ruleSmallClass
	{ $current=$iv_ruleSmallClass.current; }
	EOF;

// Rule SmallClass
ruleSmallClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSmallClassAccess().getSmallClassAction_0(),
					$current);
			}
		)
		otherlv_1='SmallClass'
		{
			newLeafNode(otherlv_1, grammarAccess.getSmallClassAccess().getSmallClassKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSmallClassAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSmallClassRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.SmallUML.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSmallClassAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='listeAttribute'
			{
				newLeafNode(otherlv_4, grammarAccess.getSmallClassAccess().getListeAttributeKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getSmallClassAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSmallClassAccess().getListeAttributeAttributeParserRuleCall_4_2_0());
					}
					lv_listeAttribute_6_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSmallClassRule());
						}
						add(
							$current,
							"listeAttribute",
							lv_listeAttribute_6_0,
							"org.xtext.SmallUML.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getSmallClassAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSmallClassAccess().getListeAttributeAttributeParserRuleCall_4_3_1_0());
						}
						lv_listeAttribute_8_0=ruleAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSmallClassRule());
							}
							add(
								$current,
								"listeAttribute",
								lv_listeAttribute_8_0,
								"org.xtext.SmallUML.Attribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getSmallClassAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_10='listeMethode'
			{
				newLeafNode(otherlv_10, grammarAccess.getSmallClassAccess().getListeMethodeKeyword_5_0());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getSmallClassAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSmallClassAccess().getListeMethodeMethodeParserRuleCall_5_2_0());
					}
					lv_listeMethode_12_0=ruleMethode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSmallClassRule());
						}
						add(
							$current,
							"listeMethode",
							lv_listeMethode_12_0,
							"org.xtext.SmallUML.Methode");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getSmallClassAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSmallClassAccess().getListeMethodeMethodeParserRuleCall_5_3_1_0());
						}
						lv_listeMethode_14_0=ruleMethode
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSmallClassRule());
							}
							add(
								$current,
								"listeMethode",
								lv_listeMethode_14_0,
								"org.xtext.SmallUML.Methode");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getSmallClassAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getSmallClassAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleAssociation
entryRuleAssociation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssociationRule()); }
	iv_ruleAssociation=ruleAssociation
	{ $current=$iv_ruleAssociation.current; }
	EOF;

// Rule Association
ruleAssociation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Association'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssociationAccess().getAssociationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssociationAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssociationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.SmallUML.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAssociationAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='source'
		{
			newLeafNode(otherlv_3, grammarAccess.getAssociationAccess().getSourceKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssociationAccess().getSourceSmallClassParserRuleCall_4_0());
				}
				lv_source_4_0=ruleSmallClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssociationRule());
					}
					set(
						$current,
						"source",
						lv_source_4_0,
						"org.xtext.SmallUML.SmallClass");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='cible'
		{
			newLeafNode(otherlv_5, grammarAccess.getAssociationAccess().getCibleKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssociationAccess().getCibleSmallClassParserRuleCall_6_0());
				}
				lv_cible_6_0=ruleSmallClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssociationRule());
					}
					set(
						$current,
						"cible",
						lv_cible_6_0,
						"org.xtext.SmallUML.SmallClass");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7='listeAttribute'
			{
				newLeafNode(otherlv_7, grammarAccess.getAssociationAccess().getListeAttributeKeyword_7_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getAssociationAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAssociationAccess().getListeAttributeAttributeParserRuleCall_7_2_0());
					}
					lv_listeAttribute_9_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssociationRule());
						}
						add(
							$current,
							"listeAttribute",
							lv_listeAttribute_9_0,
							"org.xtext.SmallUML.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getAssociationAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAssociationAccess().getListeAttributeAttributeParserRuleCall_7_3_1_0());
						}
						lv_listeAttribute_11_0=ruleAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAssociationRule());
							}
							add(
								$current,
								"listeAttribute",
								lv_listeAttribute_11_0,
								"org.xtext.SmallUML.Attribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getAssociationAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_13='listeRole'
		{
			newLeafNode(otherlv_13, grammarAccess.getAssociationAccess().getListeRoleKeyword_8());
		}
		otherlv_14='{'
		{
			newLeafNode(otherlv_14, grammarAccess.getAssociationAccess().getLeftCurlyBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssociationAccess().getListeRoleRoleParserRuleCall_10_0());
				}
				lv_listeRole_15_0=ruleRole
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssociationRule());
					}
					add(
						$current,
						"listeRole",
						lv_listeRole_15_0,
						"org.xtext.SmallUML.Role");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_16=','
			{
				newLeafNode(otherlv_16, grammarAccess.getAssociationAccess().getCommaKeyword_11_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAssociationAccess().getListeRoleRoleParserRuleCall_11_1_0());
					}
					lv_listeRole_17_0=ruleRole
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssociationRule());
						}
						add(
							$current,
							"listeRole",
							lv_listeRole_17_0,
							"org.xtext.SmallUML.Role");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getAssociationAccess().getRightCurlyBracketKeyword_12());
		}
		otherlv_19='}'
		{
			newLeafNode(otherlv_19, grammarAccess.getAssociationAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttributeAccess().getAttributeAction_0(),
					$current);
			}
		)
		otherlv_1='Attribute'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getAttributeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.SmallUML.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='type'
			{
				newLeafNode(otherlv_4, grammarAccess.getAttributeAccess().getTypeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getTypeEStringParserRuleCall_4_1_0());
					}
					lv_type_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"type",
							lv_type_5_0,
							"org.xtext.SmallUML.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMethode
entryRuleMethode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodeRule()); }
	iv_ruleMethode=ruleMethode
	{ $current=$iv_ruleMethode.current; }
	EOF;

// Rule Methode
ruleMethode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMethodeAccess().getMethodeAction_0(),
					$current);
			}
		)
		otherlv_1='Methode'
		{
			newLeafNode(otherlv_1, grammarAccess.getMethodeAccess().getMethodeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodeAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodeRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.SmallUML.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMethodeAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='returnType'
			{
				newLeafNode(otherlv_4, grammarAccess.getMethodeAccess().getReturnTypeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodeAccess().getReturnTypeEStringParserRuleCall_4_1_0());
					}
					lv_returnType_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodeRule());
						}
						set(
							$current,
							"returnType",
							lv_returnType_5_0,
							"org.xtext.SmallUML.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getMethodeAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleRole
entryRuleRole returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoleRule()); }
	iv_ruleRole=ruleRole
	{ $current=$iv_ruleRole.current; }
	EOF;

// Rule Role
ruleRole returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Role'
		{
			newLeafNode(otherlv_0, grammarAccess.getRoleAccess().getRoleKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRoleAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='Multiplicity'
			{
				newLeafNode(otherlv_2, grammarAccess.getRoleAccess().getMultiplicityKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRoleAccess().getMultiplicityEStringParserRuleCall_2_1_0());
					}
					lv_Multiplicity_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRoleRule());
						}
						set(
							$current,
							"Multiplicity",
							lv_Multiplicity_3_0,
							"org.xtext.SmallUML.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='classDedie'
		{
			newLeafNode(otherlv_4, grammarAccess.getRoleAccess().getClassDedieKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRoleAccess().getClassDedieSmallClassParserRuleCall_4_0());
				}
				lv_classDedie_5_0=ruleSmallClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoleRule());
					}
					set(
						$current,
						"classDedie",
						lv_classDedie_5_0,
						"org.xtext.SmallUML.SmallClass");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getRoleAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
